{"version":3,"sources":["header/Header.js","Comics/Comics.js","carousel/Carousel.js","Modal/Content.js","herois/herois.js","loading/Loading.js","request/Request.js","App.js","serviceWorker.js","index.js"],"names":["Header","id","src","alt","Comics","url","keyPublic","timestamp","Date","getTime","md5","Crypto","MD5","useState","comics","setComics","comicsImg","setComisImg","useEffect","a","fetch","resourceURI","toString","then","response","json","result","data","results","thumbnail","path","extension","fetchAPI","console","log","className","title","description","CarouselComics","value","items","Carousel","map","Item","Content","heroi","name","Herois","hero","person","setHeroi","isModalOpen","setModalOpen","Button","onClick","color","style","fontSize","isOpen","ariaHideApp","content","left","right","padding","background","Loading","class","Request","herois","setHerois","loading","setLoading","setValue","heroForName","document","getElementById","rename","replace","length","request","letter","type","placeholder","index","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3b10ddaf.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css'\r\nconst Header = () => {\r\n    return (\r\n        <div id=\"header\">\r\n            <div id='logo'>\r\n                <img src=\"https://seeklogo.com/images/M/Marvel_Comics-logo-D489AEB9C1-seeklogo.com.png\" alt=\"\"/>\r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, {useState, useEffect} from 'react'\r\nimport Crypto from 'crypto-js'\r\nimport './Comics.css'\r\n\r\nfunction Comics({url}) {\r\n    \r\n    const keyPublic = '37f91eaebd4facebdc8035f7c753d62b';\r\n    const keyPrivate = 'a361d56ebc8828490953812d38eac23b263ddb2b';\r\n\r\n    var timestamp = new Date().getTime();\r\n    var md5 = Crypto.MD5(timestamp+keyPrivate+keyPublic);\r\n    const [comics, setComics] = useState([]);\r\n    const [comicsImg, setComisImg] = useState([])\r\n    useEffect( () =>{\r\n        fetchAPI();\r\n        async function fetchAPI(){\r\n            const result = await fetch(`${url.resourceURI}?apikey=${keyPublic}&hash=${md5.toString()}&ts=${timestamp}`).then(response => response.json());\r\n            setComics(result.data.results[0]);\r\n            setComisImg(result.data.results[0].thumbnail.path+'.'+result.data.results[0].thumbnail.extension);\r\n        }\r\n        \r\n    }, []);\r\n    console.log(comics,'oi');\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"comics\">\r\n                    <img className=\"comicsImg\" src={comicsImg} alt=\"\"/>\r\n                    \r\n            </div>\r\n            <div className=\"comicsDescription\">\r\n                <ul>\r\n                   <li> <h1 className=\"comicsTitle\">{comics.title}</h1> </li>\r\n                    <li> <p className=\"comicsTitle\">{comics.description}</p> </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comics\r\n","import React, {useState, useEffect} from 'react'\r\nimport Comics from '../Comics/Comics';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport './Carousel.css'\r\n\r\nconst CarouselComics = ({comics}) => {\r\n    var value = comics.items;\r\n\r\n    return (\r\n        <Carousel>\r\n            {\r\n            value.map((value) => (\r\n                <Carousel.Item>\r\n                    <div className=\"movieRow--item\"> \r\n                            <Comics url={value} className=\"comics\"></Comics>\r\n                    </div>\r\n                </Carousel.Item>\r\n                )\r\n            )\r\n            }\r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default CarouselComics\r\n","import React from 'react'\r\nimport CarouselComics from '../carousel/Carousel';\r\nimport '../Modal/Content.css'\r\n\r\nconst Content = ({heroi}) => {\r\n    console.log(heroi);\r\n    return (\r\n        <div className=\"body\">\r\n            <div className=\"heroiImg\" >\r\n                <img className='photo' src={heroi.thumbnail.path+\".\"+heroi.thumbnail.extension} alt=\"\"/>\r\n            </div>\r\n            <div className=\"descricao\">\r\n                <h1 className='name'>{heroi.name}</h1>\r\n                <div className=\"description\">\r\n                    <h2 className='titleDescriprion'>Description:</h2>{heroi.description === \"\" ? \"No description registered\" : heroi.description }\r\n                </div>\r\n                <div>\r\n                    <h2 className='titleDescriprion'>Comics: </h2>\r\n                    <CarouselComics comics={heroi.comics}></CarouselComics>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content\r\n","import React, {useState, useEffect} from 'react'\r\nimport  '@material-ui/core'\r\nimport './herois.css'\r\nimport 'bootstrap'\r\nimport { Button } from '@material-ui/core'\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport Close from '@material-ui/icons/Close';\r\nimport Modal from \"react-modal\";\r\nimport Content from '../Modal/Content'\r\n\r\nconst Herois =  ({hero}) => {\r\n    const customStyles = {\r\n        content : {\r\n          \r\n          left                  : '0px',\r\n          right                 : '0px',\r\n          padding               : '10px',\r\n          background            : '#000',\r\n        }\r\n      };\r\n    const [person,setHeroi] = useState([]);\r\n\r\n    const openModal = (heroi) =>{\r\n        setHeroi(heroi)\r\n        setModalOpen(true);\r\n    }\r\n    const [isModalOpen, setModalOpen] = useState(false);\r\n    \r\n    const closeModal = () => {\r\n        setModalOpen(false)\r\n    }\r\n    \r\n    return(\r\n        <div>\r\n        {\r\n            <div className=\"personagem\">\r\n                <img src={hero.thumbnail.path+\".\"+hero.thumbnail.extension} alt=\"\"/>\r\n                <h2 id=\"nameHero\"> {hero.name} </h2> \r\n                <p id='info'>More</p>\r\n                <Button onClick={() => openModal(hero)} ><KeyboardArrowDownIcon color=\"secondary\" style={{fontSize:50}}></KeyboardArrowDownIcon></Button>\r\n            </div>\r\n        }\r\n        <Modal \r\n         isOpen={isModalOpen}\r\n         ariaHideApp={false}\r\n         style={customStyles}\r\n        >\r\n            <button onClick={() =>closeModal()} id=\"close\"><Close color=\"secondary\"></Close></button>\r\n            <Content heroi={person}></Content>\r\n        </Modal>\r\n        \r\n    </div>\r\n)\r\n    \r\n}\r\n\r\nexport default Herois\r\n","import React from 'react'\r\nimport \"../loading/Loading.css\"\r\nconst Loading = () => {\r\n    return (\r\n        <div class=\"loadingio-spinner-double-ring-96u7jel327s\"><div class=\"ldio-u9ajrf5w61n\">\r\n        <div></div>\r\n        <div></div>\r\n        <div><div></div></div>\r\n        <div><div></div></div>\r\n        </div></div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import React, { useState, useEffect } from 'react'\r\nimport Crypto from 'crypto-js'\r\nimport '../request/Request.css'\r\nimport Herois from '../herois/herois';\r\nimport Loading from '../loading/Loading';\r\nconst Request = () => {\r\n\r\n    const keyPublic = '37f91eaebd4facebdc8035f7c753d62b';\r\n    const keyPrivate = 'a361d56ebc8828490953812d38eac23b263ddb2b';\r\n\r\n    var timestamp = new Date().getTime();\r\n    var md5 = Crypto.MD5(timestamp+keyPrivate+keyPublic);\r\n    const [herois, setHerois] = useState([]);\r\n    const[loading, setLoading] = useState(false);\r\n    const [value, setValue] = useState(false);\r\n    const alph = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']; \r\n\r\n    useEffect(async () =>{\r\n        const result = await  fetch(`https://gateway.marvel.com:443/v1/public/characters?orderBy=name&limit=12&ts=${timestamp}&apikey=${keyPublic}&hash=${md5.toString()}`).then(response => response.json())\r\n        setHerois(result.data.results);\r\n        console.log(`https://gateway.marvel.com:443/v1/public/characters?orderBy=name&limit=12&ts=${timestamp}&apikey=${keyPublic}&hash=${md5.toString()}`);\r\n        setLoading(true);\r\n    }, []);\r\n\r\n    console.log(loading);\r\n    const heroForName = ( async() => {\r\n        setLoading(false);\r\n        const name = document.getElementById(\"hero\").value;\r\n        const rename = name.replace(\" \",\"%20\");\r\n        const result = await fetch(`https://gateway.marvel.com:443/v1/public/characters?name=${rename}&ts=${timestamp}&apikey=${keyPublic}&hash=${md5.toString()}`).then(response => response.json());\r\n        console.log(result);\r\n        if(result.data.results.length === 0) setValue(true)\r\n        setLoading(true);\r\n        setHerois(result.data.results);\r\n    })\r\n\r\n    const request = (async (letter) =>{\r\n        setLoading(false);\r\n        const result = await fetch(`https://gateway.marvel.com:443/v1/public/characters?nameStartsWith=${letter}&limit=100&ts=${timestamp}&apikey=${keyPublic}&hash=${md5.toString()}`).then(response => response.json())\r\n        if(result.length === 0) setValue(true)\r\n        setLoading(true);\r\n        setHerois(result.data.results);\r\n    })\r\n\r\n    return (\r\n        <div className=\"letterFind\">\r\n                <div className=\"found\">\r\n                    {\r\n                        alph.map((letter)=>(\r\n                            <button onClick ={() => request(letter)} className=\"letter\">{letter}</button>\r\n                        ))\r\n                    }\r\n                    <div id=\"form\" > \r\n                        <button onClick={() => heroForName()} id=\"search\" >search</button>\r\n                        <input type=\"text\" placeholder=\"NAME OF HERO\" id=\"hero\" name='hero' />\r\n                        \r\n                    </div>\r\n                </div>\r\n            <hr></hr>\r\n            <br></br>\r\n            {loading? \r\n                <div id=\"herois\">\r\n                    {\r\n                        herois.map((herois,index)=> (\r\n                            <Herois hero={herois}></Herois>\r\n                            \r\n                        ))\r\n                    }                           \r\n                </div>\r\n                :\r\n                <div className=\"load\">\r\n                    <Loading></Loading>\r\n                </div>\r\n             }\r\n            <div id=\"notFoudHero\">\r\n                <h1>{value ? \"HERO NOT FOUND\": \"\" }</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Request\r\n","import React from 'react';\nimport './App.css';\nimport Header from './header/Header';\nimport Request from './request/Request'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n            <Header />\n            \n            <Request></Request>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}